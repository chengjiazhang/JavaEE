<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.banyuan.pangu.dao.IUserDao">
<!--   结果集封装-->
   <resultMap id="userMap" type="User">
<!--       主键字段的对应-->
<id property="userId" column="id"></id>
<!--       非主键字段的对应-->
       <result property="userName" column="username"></result>
       <result property="userAddress" column="address"></result>
       <result property="userSex" column="sex"></result>
       <result property="userBirthday" column="birthday"></result>
   </resultMap>
    <!--    配置查询所有-->
    <select id="findAll" resultMap="userMap">
select * from user;
</select>
<!--    保存-->
<insert id="saveUser" parameterType="com.banyuan.pangu.domain.User">
--    配置插入用户返回的id
<selectKey keyProperty="userId" keyColumn="id" resultType="integer" order="AFTER">
    select last_insert_id();
</selectKey>
    insert into user(username,address,sex,birthday)values(#{userName},#{userAddress},#{userSex},#{userBirthday});
</insert>
<!--更新用户-->
    <update id="updateUser" parameterType="com.banyuan.pangu.domain.User" >
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId};
    </update>
<!--    根据id删除用户-->
    <delete id="deleteUser" parameterType="Integer" >
        delete from user where id=#{userId};
    </delete>
<!--    根据id查询用户-->
<select id="findById" parameterType="Integer" resultMap="userMap">
    select * from user where id=#{userId};
</select>
<!--    根据名称模糊查询-->
<select id="findByName" parameterType="String" resultMap="userMap">
  select * from user where username like #{name};
-- select * from user where username like '%${value}%';
</select>
<!--    获取用户的总记录条数-->
<select id="findTotal" resultType="integer">
    select count(id) from user;
</select>
<!--    根据queryVo的条件查询用户-->

    <select id="findUserByVo" parameterType="com.banyuan.pangu.domain.QueryVo" resultMap="userMap">
  select * from user where username like #{user.userName};
</select>
</mapper>